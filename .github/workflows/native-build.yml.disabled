name: Native Build

on:
  push:
    branches: [main, develop]
    tags: ["v*"]
  pull_request:
    branches: [main]

jobs:
  build-native:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            executable: pypackpack
          - os: windows-latest
            platform: windows
            executable: pypackpack.exe
          - os: macos-latest
            platform: macos
            executable: pypackpack

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: "21"
          distribution: "graalvm-community"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: "true"

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable (Unix)
        if: runner.os != 'Windows'
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

      - name: Build native executable
        run: ./gradlew buildNativeExecutable
        shell: bash

      - name: Package native executable
        run: ./gradlew packageNative
        shell: bash

      - name: Upload native executable
        uses: actions/upload-artifact@v4
        with:
          name: pypackpack-${{ matrix.platform }}
          path: packpack/build/distributions/pypackpack-native/
          retention-days: 30

      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-reports-${{ matrix.platform }}
          path: packpack/build/reports/
          retention-days: 7

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build-native
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create release archives
        run: |
          cd artifacts
          for platform in linux windows macos; do
            if [ -d "pypackpack-$platform" ]; then
              cd "pypackpack-$platform"
              tar -czf "../pypackpack-$platform.tar.gz" .
              cd ..
            fi
          done

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
